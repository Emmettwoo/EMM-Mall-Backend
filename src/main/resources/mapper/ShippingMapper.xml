<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.woohoo.mall.mapper.ShippingMapper">
    <resultMap id="BaseResultMap" type="top.woohoo.mall.model.pojo.Shipping">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="receiver_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="receiver_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="receiver_province" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="receiver_city" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="receiver_district" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="receiver_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="receiver_zip" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, receiver_name, receiver_phone, receiver_province, receiver_city,
        receiver_district, receiver_address, receiver_zip, status, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from shipping
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from shipping
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="top.woohoo.mall.model.pojo.Shipping" useGeneratedKeys="true" keyProperty="id">
        insert into shipping (id, user_id, receiver_name,
        receiver_phone, receiver_province,
        receiver_city, receiver_district, receiver_address,
        receiver_zip, status, create_time, update_time
        )
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{receiverName,jdbcType=VARCHAR},
        #{receiverPhone,jdbcType=VARCHAR}, #{receiverProvince,jdbcType=VARCHAR},
        #{receiverCity,jdbcType=VARCHAR}, #{receiverDistrict,jdbcType=VARCHAR}, #{receiverAddress,jdbcType=VARCHAR},
        #{receiverZip,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, now(), now() )
    </insert>
    <insert id="insertSelective" parameterType="top.woohoo.mall.model.pojo.Shipping">
        insert into shipping
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="receiverName != null">
                receiver_name,
            </if>
            <if test="receiverPhone != null">
                receiver_phone,
            </if>
            <if test="receiverProvince != null">
                receiver_province,
            </if>
            <if test="receiverCity != null">
                receiver_city,
            </if>
            <if test="receiverDistrict != null">
                receiver_district,
            </if>
            <if test="receiverAddress != null">
                receiver_address,
            </if>
            <if test="receiverZip != null">
                receiver_zip,
            </if>
            <if test="status != null">
                status,
            </if>
            create_time,
            update_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="receiverName != null">
                #{receiverName,jdbcType=VARCHAR},
            </if>
            <if test="receiverPhone != null">
                #{receiverPhone,jdbcType=VARCHAR},
            </if>
            <if test="receiverProvince != null">
                #{receiverProvince,jdbcType=VARCHAR},
            </if>
            <if test="receiverCity != null">
                #{receiverCity,jdbcType=VARCHAR},
            </if>
            <if test="receiverDistrict != null">
                #{receiverDistrict,jdbcType=VARCHAR},
            </if>
            <if test="receiverAddress != null">
                #{receiverAddress,jdbcType=VARCHAR},
            </if>
            <if test="receiverZip != null">
                #{receiverZip,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            now(),
            now(),
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="top.woohoo.mall.model.pojo.Shipping">
        update shipping
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="receiverName != null">
                receiver_name = #{receiverName,jdbcType=VARCHAR},
            </if>
            <if test="receiverPhone != null">
                receiver_phone = #{receiverPhone,jdbcType=VARCHAR},
            </if>
            <if test="receiverProvince != null">
                receiver_province = #{receiverProvince,jdbcType=VARCHAR},
            </if>
            <if test="receiverCity != null">
                receiver_city = #{receiverCity,jdbcType=VARCHAR},
            </if>
            <if test="receiverDistrict != null">
                receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
            </if>
            <if test="receiverAddress != null">
                receiver_address = #{receiverAddress,jdbcType=VARCHAR},
            </if>
            <if test="receiverZip != null">
                receiver_zip = #{receiverZip,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            update_time = now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.woohoo.mall.model.pojo.Shipping">
        update shipping
        set user_id = #{userId,jdbcType=INTEGER},
        receiver_name = #{receiverName,jdbcType=VARCHAR},
        receiver_phone = #{receiverPhone,jdbcType=VARCHAR},
        receiver_province = #{receiverProvince,jdbcType=VARCHAR},
        receiver_city = #{receiverCity,jdbcType=VARCHAR},
        receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
        receiver_zip = #{receiverZip,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        update_time = now()
        where id = #{id,jdbcType=INTEGER}
    </update>


    <!-- Custom Method -->

    <select id="selectByUserIdAndShippingId" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from shipping
        where id = #{shippingId}
        and user_id = #{userId}
    </select>

    <update id="updateByUserIdAndShippingId" parameterType="top.woohoo.mall.model.pojo.Shipping">
        update shipping
        set receiver_name = #{receiverName,jdbcType=VARCHAR},
        receiver_phone = #{receiverPhone,jdbcType=VARCHAR},
        receiver_province = #{receiverProvince,jdbcType=VARCHAR},
        receiver_city = #{receiverCity,jdbcType=VARCHAR},
        receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
        receiver_zip = #{receiverZip,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        update_time = now()
        where id = #{id,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=INTEGER}
    </update>

    <delete id="deleteByUserIdAndShippingId" parameterType="map">
        delete from shipping
        where id = #{shippingId}
        and user_id = #{userId}
    </delete>

    <update id="setStatusByUserIdAndShippingId" parameterType="map">
        update shipping
        set status = #{status}
        where id = #{shippingId}
        and user_id = #{userId}
    </update>

    <select id="selectByUserId" parameterType="int" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from shipping
        where user_id = #{userId}
        and status = 1
    </select>

    <select id="countByUserId" parameterType="int" resultType="int">
        select count(1) from shipping where user_id = #{userId} and status = 1
    </select>
</mapper>